'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = cleanListData;

var _ = require('./');

/**
 * Clean data requested from anime/manga lists
 *
 * @example
 * cleanListData({ myinfo: [Object], anime: [ [Object], [Object] ] })
 * cleanListData({ myinfo: [Object], manga: [ [Object], [Object] ] })
 * cleanListData({ myinfo: [Object] }) // sometimes you don't have animes/mangas
 *
 * @param  {object} data - MyAnimeList's list parsed XML
 * @return {object} - { myinfo: {...}, list: [...] }
 */
function cleanListData(_ref) {
	var myinfo = _ref.myinfo,
	    anime = _ref.anime,
	    manga = _ref.manga;

	if (!myinfo) {
		throw new Error('No \'myinfo\' field in list data therefore, it\'s an invalid list');
	}

	var cleanData = {
		myinfo: (0, _.convertFieldTypes)(myinfo),
		list: []
	};

	var type = anime || manga || false;

	if (Array.isArray(type)) {
		type.forEach(function (item) {
			cleanData.list.push((0, _.convertFieldTypes)(item));
		});
		// What happens is that the XML parser returns
		// a single value when there's only one node
		// of the same name.
	} else if (type) {
		cleanData.list.push((0, _.convertFieldTypes)(type));
	}

	return cleanData;
}
module.exports = exports['default'];