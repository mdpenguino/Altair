'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = convertFieldTypes;

var _ = require('./');

/**
 * Convert MAL's API fields to proper types
 *
 * @param {obj} obj
 * @return {obj}
 */
function convertFieldTypes(obj) {
	var result = {};

	var _iteratorNormalCompletion = true;
	var _didIteratorError = false;
	var _iteratorError = undefined;

	try {
		for (var _iterator = Object.keys(obj)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
			var key = _step.value;

			var value = obj[key];

			switch (key) {
				case 'my_last_updated':
					{
						// Sometimes it use timesptamp! Fuck U MAL API
						var date = new Date(Number(value * 1000));
						result[key] = date.getUTCFullYear() + '-' + (0, _.showTwoDigit)(date.getUTCMonth()) + '-' + (0, _.showTwoDigit)(date.getUTCDate());
						break;
					}

				case 'my_rereadingg':
					{
						// Notice tha this field have double 'g' at the end of the name -.-"
						result['my_rereading'] = value;
						break;
					}

				case 'tags':
				case 'my_tags':
					{
						result[key] = (0, _.splitBy)(',', value);
						break;
					}

				case 'synonyms':
				case 'series_synonyms':
					{
						result[key] = (0, _.splitBy)(';', value);
						break;
					}

				default:
					{
						result[key] = value;
					}
			}
		}
	} catch (err) {
		_didIteratorError = true;
		_iteratorError = err;
	} finally {
		try {
			if (!_iteratorNormalCompletion && _iterator.return) {
				_iterator.return();
			}
		} finally {
			if (_didIteratorError) {
				throw _iteratorError;
			}
		}
	}

	return result;
}
module.exports = exports['default'];